kind: Template
apiVersion: v1
metadata:
  name: redis-cluster-template
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: redis-32-rhel7-${REDIS_PORT}
    namespace: redis-cluster
    selfLink: /oapi/v1/namespaces/redis-cluster/deploymentconfigs/redis-32-rhel7-${REDIS_PORT}
    creationTimestamp: null
    labels:
      app: redis-32-rhel7-${REDIS_PORT}
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
    replicas: 1
    test: false
    selector:
      app: redis-32-rhel7-${REDIS_PORT}
      deploymentconfig: redis-32-rhel7-${REDIS_PORT}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-32-rhel7-${REDIS_PORT}
          deploymentconfig: redis-32-rhel7-${REDIS_PORT}
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
          - name: redis-32-rhel7-${REDIS_PORT}-1
            emptyDir: {}
        containers:
          - name: redis-32-rhel7-${REDIS_PORT}
            image: >-
              ewang81/redis-32-rhel7@sha256:8a3f5d0bfa3b27cfdafee1517fb8861dec3e973ed5fe3df60ec9f62768b05a93
            ports:
              - hostPort: ${REDIS_PORT}
                containerPort: ${REDIS_PORT}
                protocol: TCP
              - hostPort: 1${REDIS_PORT}
                containerPort: 1${REDIS_PORT}
                protocol: TCP
            env:
              - name: REDIS_PORT
                value: "${REDIS_PORT}"
            resources: {}
            volumeMounts:
              - name: redis-32-rhel7-${REDIS_PORT}-1
                mountPath: /var/lib/redis/data
            livenessProbe:
              tcpSocket:
                port: ${{REDIS_PORT}}
              initialDelaySeconds: 35
              timeoutSeconds: 3
              periodSeconds: 10
            readinessProbe:
              tcpSocket:
                port: ${{REDIS_PORT}}
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        hostNetwork: true
        securityContext: {}
parameters:
 - name: REDIS_PORT
   value: "6379"
   required: true
   displayName: "Redis Port"
