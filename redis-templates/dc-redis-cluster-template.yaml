#
#  oadm policy add-scc-to-group privileged system:serviceaccounts:redis-cluster
#  
# create redis server by command line:
#  oc process -p REDIS_PORT=9002 -f dc-redis-cluster-template.yaml | oc create -f -
#
# delete all by labels:
#  oc delete all -lapp=redis-32-rhel7-9002 
#
kind: Template
apiVersion: v1
metadata:
  name: redis-cluster-template
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: redis-32-rhel7-${REDIS_PORT}
    namespace: redis-cluster
    selfLink: /oapi/v1/namespaces/redis-cluster/deploymentconfigs/redis-32-rhel7-${REDIS_PORT}
    creationTimestamp: null
    labels:
      app: redis-32-rhel7-${REDIS_PORT}
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
    replicas: 1
    test: false
    selector:
      app: redis-32-rhel7-${REDIS_PORT}
      deploymentconfig: redis-32-rhel7-${REDIS_PORT}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-32-rhel7-${REDIS_PORT}
          deploymentconfig: redis-32-rhel7-${REDIS_PORT}
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
          - name: redis-32-rhel7-${REDIS_PORT}-data
            hostPath:
              path: /opt/redis-32-rhel7/${REDIS_PORT}-data
        containers:
          - name: redis-32-rhel7-${REDIS_PORT}
            image: >-
              ewang81/redis-32-rhel7@sha256:8a3f5d0bfa3b27cfdafee1517fb8861dec3e973ed5fe3df60ec9f62768b05a93
            ports:
              - hostPort: ${REDIS_PORT}
                containerPort: ${REDIS_PORT}
                protocol: TCP
              - hostPort: 1${REDIS_PORT}
                containerPort: 1${REDIS_PORT}
                protocol: TCP
            env:
              - name: REDIS_PORT
                value: ${REDIS_PORT}
              - name: REDIS_PASSWORD
                value: ${REDIS_PASSWORD}
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
              - name: redis-32-rhel7-${REDIS_PORT}-data
                mountPath: /var/lib/redis/data
            livenessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD -p $REDIS_PORT ping)" == "PONG"
              initialDelaySeconds: 35
              timeoutSeconds: 3
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD -p $REDIS_PORT ping)" == "PONG"
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        hostNetwork: true
        securityContext: {}
parameters:
- description: Port for Redis Server, default is 6379.
  displayName: Redis Port
  name: REDIS_PORT
  value: "6379"
  required: true
- description: Password for the Redis connection user.
  displayName: Redis Connection Password
  name: REDIS_PASSWORD
  value: "welcome1"
  required: true
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi